!    -*- f90 -*-
! Note: the context of this file is case sensitive.

python module pcpv ! in 
    interface  ! in :pcpv
        subroutine calc_modes(lambda,nval,ordre_ls,d_in_nm,debug,mesh_file,mesh_format,npt,nel,n_eff,bloch_vec,lx,ly,tol,e_h_field,i_cond,itermax,propmodes,printsolution,printomega,printall,checks,q_average,plot_real,plot_imag,plot_abs,loss,neq_pw,nb_typ_el,beta1,sol1,sol2,mode_pol,type_el,table_nod,x_arr,pp,qq) ! in :pcpv:py_calc_modes.f
            double precision :: lambda
            integer*8 :: nval
            integer*8 :: ordre_ls
            integer*8 :: d_in_nm
            integer*8 :: debug
            character*100 :: mesh_file
            integer*8 :: mesh_format
            integer*8 :: npt
            integer*8 :: nel
            complex*16 dimension(nb_typ_el) :: n_eff
            double precision dimension(2) :: bloch_vec
            double precision :: lx
            double precision :: ly
            double precision :: tol
            integer*8 :: e_h_field
            integer*8 :: i_cond
            integer*8 :: itermax
            integer*8 :: propmodes
            integer*8 :: printsolution
            integer*8 :: printomega
            integer*8 :: printall
            integer*8 :: checks
            integer*8 :: q_average
            integer*8 :: plot_real
            integer*8 :: plot_imag
            integer*8 :: plot_abs
            integer*8 :: loss
            integer*8 :: neq_pw
            integer*8, optional,check(len(n_eff)>=nb_typ_el),depend(n_eff) :: nb_typ_el=len(n_eff)
            complex*16, target,dimension(nval),intent(out),depend(nval) :: beta1
            complex*16, target,dimension(3,13,nval,nel),intent(out),depend(nval,nel) :: sol1
            complex*16, target,dimension(3,13,nval,nel),intent(out),depend(nval,nel) :: sol2
            complex*16 dimension(4,nval),intent(out),depend(nval) :: mode_pol
            integer*8 dimension(nel),intent(out),depend(nel) :: type_el
            integer*8 dimension(6,nel),intent(out),depend(nel) :: table_nod
            complex*16 dimension(2,npt),intent(out),depend(npt) :: x_arr
            complex*16 dimension(nb_typ_el),intent(out),depend(nb_typ_el) :: pp
            complex*16 dimension(nb_typ_el),intent(out),depend(nb_typ_el) :: qq
        end subroutine calc_modes
        subroutine calc_scat(lambda,ordre_ls,debug,n_eff,bloch_vec,lx,ly,printall,checks,neq_pw,zeroth_order,sol1,sol2,type_el,table_nod,x_arr,pp,qq,nval,npt,nel,nb_typ_el,overlap_j,overlap_j_dagger,t12,r12,t21,r21) ! in :pcpv:py_calc_scat.f
            double precision :: lambda
            integer*8 :: ordre_ls
            integer*8 :: debug
            complex*16 dimension(nb_typ_el) :: n_eff
            double precision dimension(2) :: bloch_vec
            double precision :: lx
            double precision :: ly
            integer*8 :: printall
            integer*8 :: checks
            integer*8 :: neq_pw
            integer*8 :: zeroth_order
            complex*16 dimension(3,13,nval,nel) :: sol1
            complex*16 dimension(3,13,nval,nel),depend(nval,nel) :: sol2
            integer*8 dimension(nel),depend(nel) :: type_el
            integer*8 dimension(6,nel),depend(nel) :: table_nod
            complex*16 dimension(2,npt) :: x_arr
            complex*16 dimension(nb_typ_el),depend(nb_typ_el) :: pp
            complex*16 dimension(nb_typ_el),depend(nb_typ_el) :: qq
            integer*8, optional,check(shape(sol1,2)==nval),depend(sol1) :: nval=shape(sol1,2)
            integer*8, optional,check(shape(x_arr,1)==npt),depend(x_arr) :: npt=shape(x_arr,1)
            integer*8, optional,check(shape(sol1,3)==nel),depend(sol1) :: nel=shape(sol1,3)
            integer*8, optional,check(len(n_eff)>=nb_typ_el),depend(n_eff) :: nb_typ_el=len(n_eff)
            complex*16 dimension(2 * neq_pw,nval),intent(out),depend(neq_pw,nval) :: overlap_j
            complex*16 dimension(nval,2 * neq_pw),intent(out),depend(nval,neq_pw) :: overlap_j_dagger
            complex*16 dimension(nval,2 * neq_pw),intent(out),depend(nval,neq_pw) :: t12
            complex*16 dimension(2 * neq_pw,2 * neq_pw),intent(out),depend(neq_pw,neq_pw) :: r12
            complex*16 dimension(2 * neq_pw,nval),intent(out),depend(neq_pw,nval) :: t21
            complex*16 dimension(nval,nval),intent(out),depend(nval,nval) :: r21
        end subroutine calc_scat
    end interface 
end python module pcpv

! This file was auto-generated with f2py (version:2).
! See http://cens.ioc.ee/projects/f2py2e/
